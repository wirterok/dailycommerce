# Generated by Django 3.1.6 on 2021-03-28 19:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SuperuserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_EN', models.CharField(default='', max_length=128)),
                ('name_DE', models.CharField(default='', max_length=128)),
                ('description_EN', models.TextField(null=True)),
                ('description_DE', models.TextField(null=True)),
                ('discipline_EN', models.CharField(max_length=64, null=True)),
                ('discipline_DE', models.CharField(max_length=64, null=True)),
                ('network_manager', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(max_length=128, unique=True)),
                ('paid_until', models.DateField(auto_now=True)),
                ('on_trial', models.BooleanField(default=True)),
                ('db_conf', models.JSONField()),
                ('db_name', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('user', models.CharField(max_length=128)),
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='SuperuserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=64)),
                ('rights', models.CharField(choices=[('all', 'View all content'), ('admin', 'Create/edit/delete all content'), ('creator', 'Create/edit/delete owned content'), ('none', 'None')], max_length=24)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='core.superusergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Superuser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=128, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user-avatars')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=128, null=True)),
                ('lang', models.CharField(default='en-GB', max_length=16, null=True)),
                ('phone', models.CharField(max_length=24)),
                ('groups', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.superusergroup')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user_permissions', models.ManyToManyField(blank=True, to='core.SuperuserPermission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]

# Generated by Django 3.1.6 on 2021-03-28 19:18

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payment', '0001_initial'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='files/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attributes', models.JSONField(blank=True, null=True)),
                ('user_owner', models.CharField(max_length=128)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('title', models.CharField(max_length=125)),
                ('description', models.TextField(null=True)),
                ('condition', models.CharField(max_length=128, null=True)),
                ('type', models.CharField(max_length=125, null=True)),
                ('sku', models.CharField(max_length=125, unique=True)),
                ('marketplace_sku', models.CharField(max_length=125, null=True)),
                ('serialized', models.BooleanField(default=False)),
                ('in_trash', models.BooleanField(default=False, null=True)),
                ('alternate_images', models.ManyToManyField(blank=True, related_name='products', to='product.File')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_owner', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('translations', models.ManyToManyField(related_name='tags', to='account.Translation')),
            ],
        ),
        migrations.CreateModel(
            name='ProductService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('price_gross', models.DecimalField(decimal_places=2, max_digits=7)),
                ('price_net', models.DecimalField(decimal_places=2, max_digits=7)),
                ('price_tax', models.DecimalField(decimal_places=2, max_digits=7)),
                ('default_import', models.CharField(max_length=256)),
                ('user_owner', models.CharField(max_length=128)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='payment.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=125, null=True)),
                ('designer', models.CharField(blank=True, max_length=125, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=125, null=True)),
                ('bullet_point', models.CharField(blank=True, max_length=10, null=True)),
                ('merchant_catalog_number', models.CharField(blank=True, max_length=25, null=True)),
                ('serial_number_req', models.CharField(blank=True, max_length=125, null=True)),
                ('legal_disclamer', models.TextField(blank=True, null=True)),
                ('mfr_part_number', models.CharField(blank=True, max_length=25, null=True)),
                ('search_terms', models.TextField(blank=True, null=True)),
                ('platinum_keywords', models.TextField(blank=True, null=True)),
                ('browse_node', models.CharField(blank=True, max_length=126, null=True)),
                ('memorabilia', models.CharField(blank=True, max_length=126, null=True)),
                ('autographed', models.BooleanField(blank=True, default=False, null=True)),
                ('other_item_attributes', models.CharField(blank=True, max_length=256, null=True)),
                ('target_audience', models.CharField(blank=True, max_length=125, null=True)),
                ('subject_content', models.TextField(blank=True, null=True)),
                ('TSD_age_warning', models.CharField(blank=True, max_length=24, null=True)),
                ('TSD_warning', models.CharField(blank=True, max_length=128, null=True)),
                ('TSD_language', models.CharField(blank=True, max_length=24, null=True)),
                ('product_data', models.CharField(blank=True, max_length=512, null=True)),
                ('variation', models.CharField(blank=True, max_length=128, null=True)),
                ('item_dimensions', models.CharField(blank=True, max_length=24, null=True)),
                ('package_dimensions', models.CharField(blank=True, max_length=24, null=True)),
                ('package_weight', models.CharField(blank=True, max_length=24, null=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extra_data', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=125, null=True)),
                ('uid', models.CharField(blank=True, max_length=125, null=True, unique=True)),
                ('avatar', models.ImageField(upload_to='category-images')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('user_owner', models.CharField(max_length=128)),
                ('in_trash', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='product.productcategory')),
                ('translations', models.ManyToManyField(blank=True, related_name='categories', to='account.Translation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_owner', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('terms', models.TextField(blank=True, null=True)),
                ('translations', models.ManyToManyField(related_name='attributes', to='account.Translation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', to='product.ProductTag'),
        ),
        migrations.AddField(
            model_name='product',
            name='translations',
            field=models.ManyToManyField(related_name='products', to='account.Translation'),
        ),
        migrations.CreateModel(
            name='QualityData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quality_text', models.CharField(max_length=128)),
                ('quality_description', models.TextField(blank=True, null=True)),
                ('files', models.ManyToManyField(blank=True, related_name='quality', to='product.File')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exp', to='product.product')),
            ],
            options={
                'unique_together': {('product_id', 'quality_text')},
            },
        ),
    ]
